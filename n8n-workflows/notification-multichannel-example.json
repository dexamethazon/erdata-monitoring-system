{
  "meta": {
    "description": "Multi-Channel Notification Workflow Example",
    "documentation": [
      "USAGE INSTRUCTIONS:",
      "1. Import this workflow into your n8n instance",
      "2. Configure webhook URLs and tokens in the 'Configure Channels' node:",
      "   - SLACK_WEBHOOK_URL: Your Slack webhook URL (https://hooks.slack.com/services/...)",
      "   - DISCORD_WEBHOOK_URL: Your Discord webhook URL (https://discord.com/api/webhooks/...)",
      "   - TELEGRAM_BOT_TOKEN: Your Telegram bot token from @BotFather",
      "   - TELEGRAM_CHAT_ID: Your Telegram chat/channel ID (can be negative for channels)",
      "   - GOOGLE_CHAT_WEBHOOK_URL: Your Google Chat webhook URL (https://chat.googleapis.com/v1/spaces/.../messages?...)",
      "3. Customize message content in the 'Set Message Content' node",
      "4. Enable/disable channels by setting true/false in the 'Configure Channels' node",
      "5. Test the workflow by clicking 'Execute Workflow' on the Manual Trigger node",
      "",
      "WEBHOOK/TOKEN SETUP:",
      "- Slack: Create webhook at https://api.slack.com/messaging/webhooks",
      "- Discord: Server Settings > Integrations > Create Webhook",
      "- Telegram: Create bot with @BotFather, get token and chat ID",
      "- Google Chat: Google Chat API > Configure webhooks",
      "",
      "CUSTOMIZATION:",
      "- Modify message templates in 'Set Message Content' node",
      "- Add more channels by duplicating IF + HTTP Request node pairs",
      "- Adjust notification logic based on your monitoring needs"
    ]
  },
  "name": "Multi-Channel Notification Example",
  "nodes": [
    {
      "parameters": {},
      "id": "manual-trigger-001",
      "name": "Manual Trigger",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [240, 300]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "SLACK_WEBHOOK_URL",
              "value": "https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK"
            },
            {
              "name": "DISCORD_WEBHOOK_URL", 
              "value": "https://discord.com/api/webhooks/YOUR/DISCORD/WEBHOOK"
            },
            {
              "name": "TELEGRAM_BOT_TOKEN",
              "value": "YOUR_TELEGRAM_BOT_TOKEN"
            },
            {
              "name": "TELEGRAM_CHAT_ID",
              "value": "YOUR_TELEGRAM_CHAT_ID"
            },
            {
              "name": "GOOGLE_CHAT_WEBHOOK_URL",
              "value": "https://chat.googleapis.com/v1/spaces/YOUR/GOOGLE/CHAT/WEBHOOK"
            }
          ],
          "boolean": [
            {
              "name": "ENABLE_SLACK",
              "value": true
            },
            {
              "name": "ENABLE_DISCORD",
              "value": true
            },
            {
              "name": "ENABLE_TELEGRAM",
              "value": true
            },
            {
              "name": "ENABLE_GOOGLE_CHAT",
              "value": true
            }
          ]
        },
        "options": {}
      },
      "id": "configure-channels-001",
      "name": "Configure Channels",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [440, 300]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "base_message",
              "value": "üö® Alert from Erdata Monitoring System"
            },
            {
              "name": "alert_title",
              "value": "System Alert"
            },
            {
              "name": "alert_description",
              "value": "This is a test notification from your monitoring system"
            },
            {
              "name": "timestamp",
              "value": "{{ DateTime.now().toISO() }}"
            },
            {
              "name": "severity",
              "value": "WARNING"
            }
          ],
          "object": [
            {
              "name": "slack_message",
              "value": {
                "text": "{{ $('Configure Channels').item.json.base_message }}",
                "blocks": [
                  {
                    "type": "section",
                    "text": {
                      "type": "mrkdwn",
                      "text": "*{{ $('Configure Channels').item.json.alert_title }}*\\n{{ $('Configure Channels').item.json.alert_description }}"
                    }
                  },
                  {
                    "type": "context",
                    "elements": [
                      {
                        "type": "mrkdwn",
                        "text": "Severity: `{{ $('Configure Channels').item.json.severity }}` | Time: {{ $('Configure Channels').item.json.timestamp }}"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "name": "discord_message",
              "value": {
                "content": "{{ $('Configure Channels').item.json.base_message }}",
                "embeds": [
                  {
                    "title": "{{ $('Configure Channels').item.json.alert_title }}",
                    "description": "{{ $('Configure Channels').item.json.alert_description }}",
                    "color": 16753920,
                    "fields": [
                      {
                        "name": "Severity",
                        "value": "{{ $('Configure Channels').item.json.severity }}",
                        "inline": true
                      },
                      {
                        "name": "Timestamp",
                        "value": "{{ $('Configure Channels').item.json.timestamp }}",
                        "inline": true
                      }
                    ]
                  }
                ]
              }
            },
            {
              "name": "telegram_message",
              "value": {
                "chat_id": "{{ $('Configure Channels').item.json.TELEGRAM_CHAT_ID }}",
                "text": "{{ $('Configure Channels').item.json.base_message }}\\n\\n*{{ $('Configure Channels').item.json.alert_title }}*\\n{{ $('Configure Channels').item.json.alert_description }}\\n\\n‚ö†Ô∏è Severity: {{ $('Configure Channels').item.json.severity }}\\nüïê Time: {{ $('Configure Channels').item.json.timestamp }}",
                "parse_mode": "Markdown"
              }
            },
            {
              "name": "google_chat_message",
              "value": {
                "text": "{{ $('Configure Channels').item.json.base_message }}",
                "cards": [
                  {
                    "header": {
                      "title": "{{ $('Configure Channels').item.json.alert_title }}",
                      "subtitle": "Monitoring Alert"
                    },
                    "sections": [
                      {
                        "widgets": [
                          {
                            "textParagraph": {
                              "text": "{{ $('Configure Channels').item.json.alert_description }}"
                            }
                          },
                          {
                            "keyValue": {
                              "topLabel": "Severity",
                              "content": "{{ $('Configure Channels').item.json.severity }}"
                            }
                          },
                          {
                            "keyValue": {
                              "topLabel": "Timestamp",
                              "content": "{{ $('Configure Channels').item.json.timestamp }}"
                            }
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            }
          ]
        },
        "options": {}
      },
      "id": "set-message-content-001",
      "name": "Set Message Content",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [640, 300]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "leftValue": "{{ $('Configure Channels').item.json.ENABLE_SLACK }}",
              "rightValue": true,
              "operator": {
                "type": "boolean",
                "operation": "equal"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "if-slack-enabled-001",
      "name": "IF Slack Enabled",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [840, 180]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "leftValue": "{{ $('Configure Channels').item.json.ENABLE_DISCORD }}",
              "rightValue": true,
              "operator": {
                "type": "boolean",
                "operation": "equal"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "if-discord-enabled-001",
      "name": "IF Discord Enabled",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [840, 300]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "leftValue": "{{ $('Configure Channels').item.json.ENABLE_TELEGRAM }}",
              "rightValue": true,
              "operator": {
                "type": "boolean",
                "operation": "equal"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "if-telegram-enabled-001",
      "name": "IF Telegram Enabled",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [840, 420]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "leftValue": "{{ $('Configure Channels').item.json.ENABLE_GOOGLE_CHAT }}",
              "rightValue": true,
              "operator": {
                "type": "boolean",
                "operation": "equal"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "if-google-chat-enabled-001",
      "name": "IF Google Chat Enabled",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [840, 540]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Configure Channels').item.json.SLACK_WEBHOOK_URL }}",
        "options": {},
        "bodyParametersUi": {
          "parameter": []
        },
        "jsonBodyParametersUi": {
          "parameter": []
        },
        "body": "={{ JSON.stringify($('Set Message Content').item.json.slack_message) }}",
        "headers": {
          "parameter": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        }
      },
      "id": "send-slack-notification-001",
      "name": "Send Slack Notification",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [1120, 180]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Configure Channels').item.json.DISCORD_WEBHOOK_URL }}",
        "options": {},
        "bodyParametersUi": {
          "parameter": []
        },
        "jsonBodyParametersUi": {
          "parameter": []
        },
        "body": "={{ JSON.stringify($('Set Message Content').item.json.discord_message) }}",
        "headers": {
          "parameter": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        }
      },
      "id": "send-discord-notification-001",
      "name": "Send Discord Notification",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [1120, 300]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://api.telegram.org/bot{{ $('Configure Channels').item.json.TELEGRAM_BOT_TOKEN }}/sendMessage",
        "options": {},
        "bodyParametersUi": {
          "parameter": []
        },
        "jsonBodyParametersUi": {
          "parameter": []
        },
        "body": "={{ JSON.stringify($('Set Message Content').item.json.telegram_message) }}",
        "headers": {
          "parameter": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        }
      },
      "id": "send-telegram-notification-001",
      "name": "Send Telegram Notification",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [1120, 420]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Configure Channels').item.json.GOOGLE_CHAT_WEBHOOK_URL }}",
        "options": {},
        "bodyParametersUi": {
          "parameter": []
        },
        "jsonBodyParametersUi": {
          "parameter": []
        },
        "body": "={{ JSON.stringify($('Set Message Content').item.json.google_chat_message) }}",
        "headers": {
          "parameter": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        }
      },
      "id": "send-google-chat-notification-001",
      "name": "Send Google Chat Notification",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [1120, 540]
    },
    {
      "parameters": {},
      "id": "no-operation-001",
      "name": "Workflow Complete",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [1400, 360]
    }
  ],
  "connections": {
    "Manual Trigger": {
      "main": [
        [
          {
            "node": "Configure Channels",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Configure Channels": {
      "main": [
        [
          {
            "node": "Set Message Content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Message Content": {
      "main": [
        [
          {
            "node": "IF Slack Enabled",
            "type": "main",
            "index": 0
          },
          {
            "node": "IF Discord Enabled",
            "type": "main",
            "index": 0
          },
          {
            "node": "IF Telegram Enabled",
            "type": "main",
            "index": 0
          },
          {
            "node": "IF Google Chat Enabled",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF Slack Enabled": {
      "main": [
        [
          {
            "node": "Send Slack Notification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF Discord Enabled": {
      "main": [
        [
          {
            "node": "Send Discord Notification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF Telegram Enabled": {
      "main": [
        [
          {
            "node": "Send Telegram Notification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF Google Chat Enabled": {
      "main": [
        [
          {
            "node": "Send Google Chat Notification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Slack Notification": {
      "main": [
        [
          {
            "node": "Workflow Complete",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Discord Notification": {
      "main": [
        [
          {
            "node": "Workflow Complete",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Telegram Notification": {
      "main": [
        [
          {
            "node": "Workflow Complete",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Google Chat Notification": {
      "main": [
        [
          {
            "node": "Workflow Complete",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "createdAt": "2024-07-18T05:00:00.000Z",
  "updatedAt": "2024-07-18T05:00:00.000Z",
  "id": "notification-multichannel-example"
}